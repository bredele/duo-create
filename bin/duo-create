#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var utils = require('../utils');
var path = require('path');
var fs = require('fs');
var join = path.join;
var exists = fs.existsSync;
var mkdirp = require('mkdirp').sync;
var readme = require('../templates/readme');

// usage

program.usage('[dir]');

// options

program
  .option('-t, --test <test>', 'test your component with duo-test')
  .parse(process.argv);

// config

var conf = {};

// dest

var dir = program.args[0] || '.';


/**
 * Verbose write.
 */

function write(path, str) {
  if (exists(path)) {
    utils.warn('exists', path);
  } else {
    utils.log('create', path);
    fs.writeFileSync(path, str);
  }
}

function mkdir() {
	mkdirp(path.join.apply(path, arguments));
}


var prompt = {
  name: 'name: ',
  js: 'does this component have js? ',
  css: 'does this component have css? '
};

// prompt

program.prompt(prompt, function(obj){
  var name = obj.name;
  var test = program.test;

  // dir
  console.log();
  utils.log('create', dir);
  mkdir(dir);
  mkdir(dir, 'lib');
  if(test) mkdir(dir, 'test');

  // js
  if(yes(obj.js)) write(join(dir + '/lib', 'index.js'), '');
  if(yes(obj.css)) write(join(dir + '/lib','index.css'), '');
  if(test) write(join(dir + '/test', name + '.js'));

  write(join(dir, 'Makefile'), createMakefile(obj));
  write(join(dir, 'readme.md'), readme(obj));
  write(join(dir, 'changelog.md'), '');
  write(join(dir, '.gitignore'), 'components\nbuild\nnode_modules');

  console.log();
  process.exit();
});

/**
 * Booleans from `str`.
 */

function yes(str) {
  return /^y(es)?/i.test(str);
}

/**
 * Create a makefile.
 */

function createMakefile(obj) {
  return '';
}